
    === Escalabilidade – 24 threads ===

    Tabela‑síntese (médias)
    -----------------------
              S_med    E_med     O_med    Dt_med   f_med    a_med
Linguagem                                                        
C Threads   52.8339   2.2014 -354.2919  704.7983  1.0234  -1.2536
Julia      281.1875  11.7161 -656.4430  717.3879  1.0398 -11.1821
OpenMP      41.3490   1.7229 -365.5563  705.2677  1.0134  -0.7543

    Interpretação de cada métrica
    -----------------------------
    • **Speed‑up (Sₚ)** – fator de aceleração; quanto maior melhor.
    • **Eficiência (Eₚ = Sₚ/p)** – aproveitamento por núcleo; Eₚ≈1 é ideal, <0,3 indica desperdício.
    • **Overhead (p·Tₚ − T₁)** – tempo de CPU extra (positivo) ou economizado (negativo).
    • **Δt = T₁ − Tₚ** – segundos reais poupados.
    • **f (Amdahl)** – fração paralelizável (1 → escala linear; >1 indica speed‑up super‑linear).
    • **α (Gustafson)** – fração serial em escala fraca (0 é ideal; negativo quando há super‑linearidade).

    Resultados‑chave
    ----------------
    • Julia alcança Speed‑up médio 281.2× e Eficiência média 11.72 (>1, super‑linear), com Overhead médio -656 s (negativo).
    • C Threads obtém Speed‑up 52.8×; Eficiência 2.20; Overhead -354 s.
    • OpenMP fica em 41.3×; Eficiência 1.72; Overhead -366 s.
    • Fração paralelizável média (f): Julia 1.04, C Threads 1.02, OpenMP 1.01. Todas ≈1, logo o gargalo futuro é a memória. α segue a mesma tendência.

    Melhor escolha
    --------------
    **Julia** é recomendada, pois combina maior Speed‑up, alta Eficiência e Overhead mais favorável.

    Arquivos gerados
    ----------------
    • Gráficos: figs/*.png
    • Relatório: relatorio_escalabilidade.txt
